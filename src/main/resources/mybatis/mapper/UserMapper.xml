<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seu.universe.mapper.UserMapper">

    <resultMap id="userResultMap" type="com.seu.universe.entity.User">
        <result property="userId" column="user_id" />
        <result property="nickname" column="user_nickname" />
        <result property="password" column="user_password" />
        <result property="status" column="user_status" />
        <result property="registerTime" column="user_time" />
        <result property="email" column="user_email" />
    </resultMap>

    <insert id="addUser" parameterType="com.seu.universe.entity.User">
        INSERT INTO
        t_user(user_password, user_nickname, user_status, user_email, user_time)
        VALUES (#{password}, #{nickname}, #{status}, #{email}, #{registerTime})
    </insert>

    <select id="getUserByEmail" parameterType="String" resultMap="userResultMap">
        select user_id,user_nickname,user_password,user_status,user_time,user_email
        from t_user
        WHERE user_email = #{email}
    </select>

    <select id="getUserByUserId" parameterType="Long" resultMap="userResultMap">
        select user_id,user_nickname,user_password,user_status,user_time,user_email
        from t_user
        WHERE user_id = #{userId}
    </select>

    <update id="createUserMessageTable" parameterType="String">
        create table ${tableName} (
                            message_id bigint(10) not null auto_increment,
                            message_type varchar(20),
                            message_info varchar(400),
                            message_time TIMESTAMP,
                            message_collectnum int(10),
                            message_transpondnum int(10),
                            message_likenum int(10),
                            message_readnum int(10),
                            message_commentnum int(10),
                            message_label varchar(50),
                            picture_id bigint(10),
                            user_id bigint(10),
                            primary key (message_id))
    </update>

    <update id="dropUserMessageTable" parameterType="String">
        drop table ${tableName} if EXISTS
    </update>

</mapper>